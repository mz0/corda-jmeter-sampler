buildscript {
    def confFile = 'corda-sampler.config'
    Properties conf = new Properties()
    if (file(confFile).exists()) {
        file(confFile).withInputStream { conf.load(it) }
        ext.jmeterHome = conf.getProperty("JMETER_HOME")
     // ext.artifactory_user = conf.getProperty("CORDA_ARTIFACTORY_USERNAME")
     // ext.artifactory_password = creds.getProperty("CORDA_ARTIFACTORY_PASSWORD")
    } else {
        ext.jmeterHome = System.getenv("JMETER_HOME") ?: "/opt/jmeter5"
     // ext.artifactory_user = System.getenv("CORDA_ARTIFACTORY_USERNAME")
     // ext.artifactory_password = System.getenv("CORDA_ARTIFACTORY_PASSWORD")
    }
}
plugins {
    id("org.jetbrains.kotlin.jvm") version '1.2.71'
    id 'java'
}

allprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            languageVersion = "1.2"
            apiVersion = "1.2"
            jvmTarget = "1.8"
        }
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url = "https://software.r3.com/artifactory/corda-dependencies" }
}
 
configurations {
    all*.exclude group: 'org.apache.jmeter', module: 'jorphan'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.71"
    api "net.corda:corda-core:4.1"
    implementation "net.corda:corda-rpc:4.1"
 // api 'com.r3.corda:corda-ptflows:4.2'
    api 'org.apache.jmeter:ApacheJMeter_java:5.2'
}

jar {
    baseName project.name
}

task copyLib(type:Copy) {
    from configurations.default
    into "$jmeterHome/lib"
    duplicatesStrategy DuplicatesStrategy.WARN
    exclude "kotlin-stdlib-jdk7*"
}

task copySampler(type:Copy, dependsOn:[build, copyLib]) {
    from jar
    into "$jmeterHome/lib/ext"
}

wrapper {
    gradleVersion = "5.4.1"
    distributionType = Wrapper.DistributionType.ALL
}
